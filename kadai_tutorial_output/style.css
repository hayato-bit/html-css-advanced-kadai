/* PC,スマホ共通スタイル */
/* *（アスタリスク）は、すべての要素を選択するユニバーサルセレクタです。以下の要に記述した場合、
ページ内のすべての要素に対してbox-sizing: border-box;が適用されます。 */
/* box-sizingを使うと要素のサイズ指定の際にpaddingとborderが自動で考慮されます。 */

* {
  box-sizing: border-box;
}

p {
  font-size: 15px;
}

/* font-family */
/* フォントは基本的に複数指定しましょう。なぜなら、デバイス（パソコンやスマートフォンなど個別の機器）によって表示できるフォントが異なるからです。
より具体的にいえば、そのデバイスにインストールされているフォントしか表示できません。 */
/* 優先したいフォントを先に書く→英語フォントを先に書く（日本語フォントは後）→最後に総称フォントを書く（総称フォント名は引用符で囲まない） */
/* なお、フォント名にスペースが含まれる場合は"（ダブルクオーテーション）で囲みます。 */
/* 要素の最大幅を指定 */

/* max-width */
/* 要素の最大幅を指定。1080pxは超えない。 */

/* margin */
/* marginの左右を中央寄せに設定 */
body {
  max-width: 1080px; 
  margin: 0 auto; 
  font-family: "Source Sans Pro", "Hiragino Kaku Gothic ProN", Meiryo, Arial, sans-serif;
}

/* display: flex;
要素を横並びにする */
/* justify-content: space-between; 最初と最後の子要素を両端に配置し、残りの要素は均等に間隔を開けて配置 */

header {
  display: flex; 
  justify-content: space-between;
}

/* ナビゲーションのレイアウト */
#nav-pc {
  font-size: 14px;
}

/* display: flex;
要素を横並びにする */
/* padding-left: 40px;を0に変更 */
#nav-pc ul {
  display: flex;
  padding-left: 0;
}

/* <li>要素のスタイルを除去する */
#nav-pc li {
  list-style: none;
}


/* ナビゲーションのリンクの装飾設定 */

 /* text-decoration: none;　リンクの下線を非表示にする */
 /* margin-left: 20px; 間隔を開ける */
 /* color リンクの色を変更 */
#nav-pc a {
  text-decoration: none;
  margin-left: 20px;
  color: #0d0d0d;
}

/* マウスのカーソルが重なった状態の時のみ下線を表示させる */
#nav-pc a:hover {
  text-decoration: underline;
}

/* メインビジュアル */
/* 子要素にaboluteを指定したいため、relativeを記載 */
#main-visual {
  position: relative;
  height: 400px;
}

/* 親要素を基準にした絶対位置で配置するために、position: absolute;を指定する
top、leftプロパティにそれぞれ0を指定して、親要素の左上に配置する
背景色を紺色（#2710d5）にする
文字色を白色（#ffffff）にする
border-radiusプロパティで右下の角を丸める（476px）
最大幅は620pxにする
幅と高さを100%にして、要素のサイズに合わせて広げる
z-indexで重なり順を指定し、画像の上に重なるようにする（メインビジュアルの重なり順は10番台を指定） */

#main-message {
  position: absolute;
  top: 0;
  left: 0;
  background-color: #2710d5;
  color: #ffffff;
  border-bottom-right-radius: 476px;
  max-width: 620px;
  height: 100%;
  width: 100%;
  z-index: 11;
}

#main-message > h1 {
  font-size: 60px;
  margin: 100px 0 0 50px;
}

#main-message > p {
  font-size: 28px;
  margin: 0 0 0 50px;  
}


/* 最大幅を620pxにする
border-radiusプロパティで左上の角を丸める（476px）
親要素を基準にした絶対位置で配置するために、position: absolute;を指定する
top、rightプロパティにそれぞれ0を指定して、親要素の右上に配置する
メッセージの背景が上に重なる（画像が下になる）ように、z-index: 10;を指定する */

#main-visual > img {
  max-width: 620px;
  border-top-left-radius: 476px;
  position: absolute;
  top: 0;
  right: 0;
  z-index: 10;
}

/* 見出し */
h2 {
  margin-top: 40px;
}

h2::after {
  content: url("images/line.png");
  margin-left: 10px;
}

h3 {
  font-size: 27px;
}

/* 中央寄せにする */
#mission {
  margin: 80px auto;
}

/* 子要素を横並びにする */
#mission-flex {
  display: flex;
}

/* 幅（width）：50%を指定して、2つのdiv要素をちょうど半分に分ける */
/* margin 要素同士の間隔を開ける */
#mission-flex > div {
  width: 50%;
  margin: 20px;
}

/* 幅（width）：100%を指定して、親要素の幅いっぱいに広げる */
#mission-photo {
  width: 100%;
}

#s2dgs {
  margin-top: 50px;
  width: 100%;
}

/* プロダクト */

#product {
  background-color: #fafafa;
  margin: 80px 0px;
  padding: 10px 40px 0px 40px;
}

/* 外枠 */
#product .product-flex {
  margin-top: 40px;
  display: flex;
}

/* 左のカラム */
/* margin-right 20pxしている理由が分からない */
#product-left {
  width: 50%;
  margin-right: 20px;
}

/* 右のカラム */
#product-right {
  width: 50%;
  margin-left: 20px;
  margin-top: 80px;
}

/* relative:本来の表示位置を基準にした相対位置に配置する */
#product-left > div {
  position: relative;
  height: 480px;
  margin-right: 20px;
}

#product-right > div {
  position: relative;
  height: 480px;
  margin-left: 20px;
}

/* 画像 */
/* 親のdiv要素からはみださないように幅を調整する */
.product-photo {
  width: 100%;
}


/* position: absoluteを指定するとき、親要素にrelativeを指定になければいけないが、どこに指定しているのか
#product-left > div に指定している認識でよいか */
.product-explain {
  background-color: #ffffff;
  position: absolute;
  left: 0;
  bottom: 50px;
  margin: 0 40px;
  padding: 20px;
  box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.05);
}

.product-explain > span {
  color: #2710d5;
  font-weight: bold;
  font-size: 16px;
  margin: 0;
}

.product-explain > h3 {
  margin: 5px 0;
}

.product-explain > p {
  font-size: 14px;
  margin: 0;
}

#product-more {
  text-align: center;
}

#product-more a {
   position: relative;
   bottom: -42px;
}

/* ABOUT US */

/* #productsのマージンと#aboutsのマージンが相殺されている気がするが、問題ないのか */
#abouts {
  margin: 80px auto;
} 

/* 子要素を横並びにするため、flexを指定する */
#abouts > div {
  display: flex;
}

.culture-img {
  width: 50%;
  align-self: flex-start;
}

.culture-img2 {
  margin-top: 50px;
  width: 100%;
}

/* 画像との間に余白を作る */
.culture-table {
  margin-right: 50px;
}

.culture-num {
  font-size: 80px;
  color: #2710d5;
  padding-right: 20px;
}

/* text-alignプロパティは、文字や画像に対して、水平方向の揃え方を指定するプロパティです。
例えば、文字を左や右に寄せたり、画像を中央に寄せたりする時に使います。 */
.culture-table th {
  text-align: left;
  font-size: 28px;
  font-weight: bold;
}

.culture-en {
  color: #2710d5;
  font-size: 24px;
}

.culture-description {
  margin: 0;
}

#vision {
  margin: 80px auto;
}

/* VISION */

/* 横方向の揃え方（justify-content）：space-betweenを指定する（一番左と一番右の子要素を両端に配置し、残りの子要素を均等な間隔で配置する） */
/* セクション内の外枠 */
#vision > div {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}

/* 7つの行動指針の枠 */
.vision-box {
  width: 300px;
  height: 300px;
  margin-bottom: 30px;
  position: relative;
}

.vision-box > img {
  width: 100%;
  position: relative;
  z-index: 30;
}

.vision-box > div {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 31;
  margin-right: 20px;
}

.vision-box > div > h4 {
  color: #2710d5;
  font-size: 19px;
  margin-top: 80px;
}

.vision-box > div > h4::first-letter {
  font-size: 40px;
}

.vision-box > div > h5 {
  font-size: 20px;
  margin: 0;
}

.vision-box > div > p {
  margin: 10px 0 0 0 ;
}

/* 会社概要 */
#company {
  margin: 80px auto;
}

#company-table {
  width: 100%;
}

.tableheader {
  text-align: left;
  padding: 20px;
  border-bottom-color: #2710d5;
  border-bottom-width: 1px;
  border-bottom-style: solid;
  width: 100px;
}

.tableheader-first {
  border-top-color: #2710d5;
  border-top-width: 1px;
  border-top-style: solid;
}

.cell {
  padding: 30px;
  border-bottom-color: #ececec;
  border-bottom-width: 1px;
  border-bottom-style: solid;
}

.cell-first {
  border-top-color: #ececec;
  border-top-width: 1px;
  border-top-style: solid;
}

#company > iframe {
  width: 100%;
  height: 368px;
  margin-top: 40px;
}

/* お問い合わせ */
#contact {
  margin: 80px auto;
}

/* 外枠 */
#contact > form > div {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  padding-bottom: 30px;
}

/* 左列の見出し */
/* align-self はflexアイテムの配置を個別に指定するプロパティです。上揃え・下揃え・中央揃えや、ベースライン（テキストの下部）で揃える指定、親要素の高さに則って伸縮する指定などができます。
align-self の配置は、flex-direction の値によって方向が変わります。flex-direction: row; のときは縦方向、flex-direction: column; のときは横方向での配置となります。 */
/* center : 親要素の中央に配置 */
.contact-heading {
  width: 240px;
  align-self: center;
}

/* 見出しのラベル */
.contact-label {
  font-weight: bold;
}

/* 必須 */
.contact-span {
  color: #ce2222;
  margin-left: 20px;
  font-weight: bold;
}

/* テキストボックス */
.contact-textbox {
  border-top: 0px;
  border-left: 0px;
  border-right: 0px;
  border-bottom-width: 1px;
  border-bottom-color: #707070;
  border-style: solid;
  background-color: #fafafa;
  width: 400px;
  height: 56px;
}

/* お問い合わせ内容のテキストエリア */
.contact-textarea {
  border-top: 0px;
  border-left: 0px;
  border-right: 0px;
  border-bottom-width: 1px;
  border-bottom-color: #707070;
  background-color: #fafafa;
  width: 400px;
  height: 200px;
}

/* 個人情報の取り扱い */
#contact dt {
  font-weight: bold;
}

#contact dd {
  margin: 0 0 16px 0;
}

#contact dd ul {
  padding-left: 0px;
}

#contact dd ul li {
  list-style: none;
}


/* フッター */
footer {
  background-color: #0d0d0d;
  text-align: center;
  padding: 80px 80px 30px 80px;
}

#footer-logo {
  margin-bottom: 30px;
}

#footer-link {
  margin-bottom: 50px;
}

#footer-link > a{
  text-decoration: none;
  margin: 10px;
  color: #ffffff;
}

#footer-link > a:hover {
  text-decoration: underline;
}

#sns-footer {
  display: flex;
  justify-content: space-between;
  text-align: left;
}

#sns-footer a {
  margin-right: 30px;
}

#copyright {
  color: #ffffff;
  margin: 0;
}


/* mission.html用スタイル */
/* ミッションのメインビジュアル */
/* background-position-yは、背景画像のy軸（縦方向）の位置を指定するプロパティです。値にcenterを指定することで、背景画像を縦方向の中央に配置できます。 */
.mission-main-inner {
background-image: url(images/mission/mission-main.png);
background-repeat: no-repeat;
background-position-y: center;
/* background-position-x: center; */
}

#mission-title {
  background-color: #2710d5;
  width: 368px;
  color: #ffffff;
  height: 496px;
  border-radius: 0 248px 248px 0;
  position: relative;
}
  
#mission-title h1 {
  position: absolute;
  top: 0;
  left: 100px;
  font-size: 80px;
  line-height: 1;
}

#mission-title h1 span {
  font-size: 26px;
}

/* 2番目の記載方法でも間違いではないか。(>)がついていない方法 */
#mission-title > p {
  position: absolute;
  top: 350px;
  left: 100px;
  font-size: 16px;
}

/* #mission-title  p {
  position: absolute;
  top: 350px;
  left: 100px;
  font-size: 16px;
} */

/* ミッションページ S2DGSの設定 */
#mission-s2dgs {
  padding: 20px;
}

.mission-h2 {
  color: #2710d5;
  font-size: 40px;
}

.mission-h2::after {
  content: none;
}

/* ミッションページ 5つのゴール設定 */
#mission-five-goals {
  padding: 20px;
  display: flex;
}

#mission-five-goals .five-goals-image {
  width: 30%;
  padding: 20px;
}

#mission-five-goals .five-goals-image img {
  width: 100%;
}

/* width: 70%;を指定する理由は？ */
#mission-five-goals .five-goals-read {
  width: 70%;
  padding: 20px;
}

#mission-five-goals .five-goals-read > div {
  margin-bottom: 40px;
}

/* 要素の回り込みのため */
.fivegoals-image-right {
  float: right;
  margin: 20px;
}

.fivegoals-image-left {
  float: left;
  margin: 20px;
}

.fivegoals-number {
  color: #2710d5;
  font-size: 48px;
  font-weight: bold;
  margin: 0;
}

.fivegoals-h3 {
  font-size: 28px;
  margin: 0;
}

.fivegoals-p {
  margin: 0;
}

/* プロダクトページ */
.product-main-inner {
  background-image: url("images/product/product-main.png");
  background-repeat: no-repeat;
  background-position-y: center;
 }

 #product-title {
  background-color: #2710d5;
  width: 368px;
  color: #ffffff;
  height: 496px;
  border-radius: 0 248px 248px 0;
  position: relative;
 }

 #product-title h1 {
  position: absolute;
  top: 0;
  left: 100px;
  font-size: 80px;
  line-height: 1;
 }

 #product-title h1 span {
  font-size: 26px;
 }

 #product-title > p {
  position: absolute;
  top: 350px;
  left: 100px;
  font-size: 16px;
 }

 /* セクション */
 .product-section {
  display: flex;
  padding: 20px 20px 0;
 }

 .product-section .product-section-img {
  width: 450px;
 }

 .product-section-left .product-section-img img {
  width: 100%;
  padding: 0 40px 30px 0;
  border-radius: 0 432px 0 0;
 }

 /* flex-growとは */
 .product-section-left .product-read {
  width: 50%;
  flex-grow: 1;
 }

.product-section-left .product-read p {
  margin-bottom: 0;
}

/* 両端と均等配置 どこが変化したのか分からない */
.product-section-right {
  justify-content: space-between;
}

.product-section-right .product-section-img img {
  width: 100%;
  padding: 0 0 30px 40px;
  border-radius: 432px 0 0 0;
}

.product-section-right .product-read {
  width: 500px;
}

.product-h2 {
  color: #2710d5;
  font-size: 24px;
  margin: 0;
}

.product-h3 {
  font-size: 28px;
  margin: 0;
}


 /*====================
  スマートフォン用のスタイル
 =====================*/

  /* スマホ用ナビを非表示 */
 /* ブラウザのPC画面で表示したときに、スマートフォン用ナビゲーションやハンバーガーメニューが非表示になっていればOKです。 */
   #nav-sp,#menu-sp {
    display: none;
   }

 @media screen and (max-width: 767px) {
   /* PC用ナビゲーション非表示 */
   #nav-pc {
     display: none;
   }
 
   /* ハンバーガーメニュー */
   /* floatの使い方が分からない。どのタイミングで使用するのか。 */
   #menu-sp {
     display: block;
     background-color: transparent;
     float: right;
     padding: 0;
     border: none;
   }
 
   /* スマホ用ナビゲーションの表示切替*/
   /* 初期状態、レイアウトと非表示設定 */
   /* height: 100%;,width: 100%;の親要素はbody要素 */
   /* leftとtopは必要なのか。非表示にしたが特に変化はなかった。 */
   /* →機種又はブラウザによっては、見え方が違うおそれがあるため。お守りとして指定。青い画面がずれるおそれがある。左ぴったりに揃える。上ぴったりに揃える。 */
   #nav-sp {
     background-color: #2710d5;
     position: fixed;
     left: 0;
     top: 0;
     height: 100%;
     width: 100%;
     display: none;
     z-index: 100;
   }

   /* 親要素にposition:relativeを使用していないのに、何故使用できるのか */
   /* →親要素の基準にposition:fixed、relative、absoluteの3つ。3つの効果は、違うので注意fixedは、固定。大体は、relative。static（初期値は）除外。 */
   #close {
    position: absolute;
    top: 20px;
    right: 20px;
    background-color: transparent;
    border: none;
   }

   #nav-sp nav ul {
    padding: 0;
   }

   #nav-sp li {
    list-style: none;
   }

   #logo-sp {
    margin: 80px 0 30px 20px;
   }

   /* ナビゲーションリンクの装飾設定 */
   /* 元々縦並びになっているのだが、display: block;は必要なのか。 */
   /* 上記は、padding・marginプロパティで上下左右に余白を指定するために指定したのか。#logo-spでmarginを指定するために */
   /* →blockの中で、横幅いっぱいにするためとpadding・marginプロパティで上下左右に余白を指定するため */
   #nav-sp nav a {
    display: block;
    color: #ffffff;
   }

   /* 下線を表示する */
    #nav-sp nav a:hover {
     text-decoration: underline;
   }

   /* background-imageの画像が右端に配置されいるのが分からない */
   /* background-position: right top;を指定しているため */
   #nav-sp .menu {
    text-decoration: none;
    margin: 0 20px;
    height: 44px;
    font-size: 16px;
    background-image: url(images/arrow.png);
    background-repeat: no-repeat;
    background-position: right top;
   }

   #sns {
    position: absolute;
    bottom: 20px;
    left: 20px;
   }

   #sns > a {
    margin-right: 30px;
   }

   /* メインビジュアル */
   #main-visual {
    position: relative;
    height: 470px;
   }

   #main-visual > div {
    text-align: center;
    height: 280px;
   }

   #main-visual h1 {
    font-size: 20px;
    margin: 90px 0 0 0;
   }

   #main-visual > div > p {
    margin: 0;
    font-size: 15px;
   }

   /* top,bottomを指定しているが、positionを指定していないが大丈夫なのか */
   /* PCの時に記載したposition:absolute;があるから。 */
   #main-visual > img {
    width: 100%;
    border-top-left-radius: 476px;
    top: auto;
    bottom: 0;
   }

   h2 {
    margin: 15px 0;
   }

   h3 {
    font-size: 24px;
    margin: 10px 0 0 0;
   }

   #mission {
    margin: 20px 0;
    padding: 0 20px;
   }

   /* スマホの場合は、display:flex;を指定しなくてもよいのか。
   /* PC版にdisplay:flex;を指定しているから？→その通り */
   #mission-flex {
    flex-direction: column;
   }

   #mission-flex > div {
    width: 100%;
    margin: 0;
   }

   /* プロダクト */
   #product {
    margin: 0;
    padding: 10px 20px 0 20px;
   }

   /* 外枠 */
   #product .product-flex{
    flex-direction: column;
    margin-top: 0;
   }
   
   /* 左右のカラム スマホでは縦並び */
   #product-left,#product-right {
    width: 100%;
    margin: 0;
   }

   /* 画像+説明の枠 */
   /* height: auto;に設定した理由が分からない */
   /* PCの方で、heightを480pxに指定しているため、余白がぎちぎちになっている。autoを指定するとbottomが有効化されるので、480pxではなくて480px+bottom50px=520pxとなる */
   #product-left > div,#product-right > div{
    height: auto;
    margin: 0;
   }

   /* 説明文の枠 */
   /* position: relative;を指定することで、本来の表示位置に戻った？？→その通りです */
   .product-explain{
    position: relative;
    margin: 0;
   }

   .product-explain h3 {
    margin: 10px 0;
   }

   /* もっと見るボタン */
   #product-more {
    text-align: left;
   }

   /* ABOUT US */
   #abouts {
    margin: 80px 20px;
   }

   #abouts div {
    flex-direction: column;
   }

   .culture-table th {
    font-size: 16px;
   }

   /* order アイテムの並び順を指定 */
   /* orderの値が小さい要素から順に表示される */
   .culture-table {
    margin-right: 0;
    padding-right: 20px;
    order: 2;
   }
   
   .culture-img {
    width: 100%;
    order: 1;
   }

   .culture-img2 {
    margin-top: 0;
   }

   .culture-num {
    padding: 0;
   }

   /* デペロッパーツールで確認したが、marginは元々ついていないが、0にする理由が分からない */
   /* →ブラウザの初期設定でスタイルがついている可能性があるので、0にした。 */
   .culture-description {
    margin: 0;
   }

   /* ビジョン */
   #vision {
    margin: 80px 20px;
   }

   .vision-box > img {
    position: absolute;
    top: 0;
    left: 0;
   }

   .vision-box > div > h4 {
    margin: 60px 0 0 0;
   }

   /* 会社概要 */
   #company {
    margin: 0 20px;
   }

   #company > h3 {
    margin: 0 0 20px 0;
   }

   .tableheader {
    width: 50px;
   }

   .cell {
    padding: 20px;
   }

   #company > iframe {
    height: 240px;
   }

   /* お問い合わせ */
   #contact {
    margin: 80px 20px;
   }

   #contact > h3 {
    margin: 0 0 20px 0;
   }

   #contact > form > div {
    flex-direction: column;
    margin-bottom: 20px;
   }

   /* align-self: auto; は、flexアイテムの配置が親要素の align-items の値を継承する指定だと思うが、親要素にalign-itemsを指定していないと思う。なぜ、左端に配置されるのか。 */
   /* →align-selfは子要素に指示を出すイメージ（バラバラに指示を出す）display:flex;がないと使えない。。align-itemsは、親要素に指定して、子要素全てに指示を出す（一括で同じ動きをする）。 */

   .contact-heading {
    align-self: auto;
    margin-bottom: 20px;
   }

   /* min-width: 300px;以上のときにwidth:100%;が反映されると思うが、画面を縮小した際に、テキストエリアが親要素以上になることがある。
   例：親要素が320なのに、320以上拡大する */
   .contact-textbox {
    min-width: 300px;
    width: 100%;
   }

   /* 画面を縮小した際に、テキストエリアが親要素以上になることがある。
   例：親要素が320なのに、320以上拡大する  */
   /* →気のせい */
   .contact-textarea {
    height: 150px;
    width: 100%;
   }

   .radiobutton {
    margin: 0 0 20px 0;
   }

   /* フッター */
   footer {
    padding: 30px 20px 50px 20px;
    text-align: left;
   }

   #footer-link > a{
    margin: 0 20px 30px 0;
    display: block;
    background-image: url(images/arrow.png);
    background-repeat: no-repeat;
    background-position: right top;
   }

   #footer-link > a:hover {
    text-decoration: underline;
   }
   
   /* flex-direction: column;は、子要素を上から下に配置するプロパティだと思うが、横一列に配置されているのはなぜか。
   justify-content: flex-start;行の開始位置から配置。左揃え */
   /* →ブロックの見方の問題。横一列ではなくて、縦一列になっています。 */
   #sns-footer {
    flex-direction: column;
    justify-content: flex-start;
   }

   #copyright {
    font-size: 12px;
    margin-top: 30px;
   }

   /* mission.html用のスタイル
   ミッションのメインビジュアル */
   #mission-main {
    height: 256px;
    margin-top: 4%;
    position: relative;
   }

   /* background-size: cover; 表示領域を埋めつくす */
   .mission-main-inner {
    height: 80%;
    background-size: cover;
   }

   #mission-title {
     width: 136px;
     height: 256px;
     position: absolute;
     top: -10%;
   }

   /* PCの方でposition:absolute;を指定しているので、スマホ版には記載していない認識でよいか。 */
   #mission-title h1 {
    left: 20px;
    font-size: 40px;
   }

   #mission-title h1 span {
    font-size: 18px;
   }

   #mission-title > p {
    top: 180px;
    left: 20px;
    font-size: 13px;
   }

   /* ミッションページ S2DGSの設定 */
   .mission-h2 {
    font-size: 38px;
    margin: 0
    ;
   }

   /* PC版で設定されているので、必要ない気がします。 */
   .mission-h2::after {
    content: none;
   }

   #mission-s2dgs > img{
    width: 100%;
   }

   #mission-five-goals {
    flex-direction: column;
   }

   #mission-five-goals > div {
    padding: 0;
   }

  #mission-five-goals .five-goals-image,
  #mission-five-goals .five-goals-read {
     width: 100%;
     padding: 0;
   }

   #mission-five-goals .five-goals-read > div {
    display: flex;
    flex-direction: column;
   }

   /* align-self: center;を指定した際に、画像が小さくなる理由が分からないです。 */
   .fivegoals-image-right,
   .fivegoals-image-left {
    align-self: center;
   }

   /* プロダクトページ */
   #product-main {
    height: 256px;
    margin-top: 4%;
    position: relative;
   }

   .product-main-inner {
    height: 80%;
    background-size: cover;
   }

   #product-title {
    width: 136px;
    height: 256px;
    position: absolute;
    top: -10%;
   }

   #product-title h1 {
    left: 20px;
    font-size: 40px;
   }

   #product-title h1 span {
    font-size: 18px;
   }

   #product-title > p {
    top: 180px;
    left: 20px;
    font-size: 13px;
   }

   .product-section {
    flex-direction: column;
   }

   .product-section .product-section-img {
    width: 100%;
   }

   .product-section .product-section-img img {
    border-radius: 0 300px 0 0;
   }

   /* flex-growとはなにか */
   .product-section-left .product-read {
    width: 100%;
    flex-grow: 1;
   }

   .product-section-right .product-read {
    order: 2;
    width: 100%;
   }
  }